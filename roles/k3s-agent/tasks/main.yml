---
- name: Download K3s install script
  ansible.builtin.get_url:
    url: https://get.k3s.io/
    timeout: 120
    dest: /usr/local/bin/k3s-install.sh
    owner: root
    group: root
    mode: '0755'

- name: Download K3s binary
  ansible.builtin.command:
    cmd: /usr/local/bin/k3s-install.sh
    creates: /usr/local/bin/k3s
  environment:
    INSTALL_K3S_SKIP_START: 'true'
    INSTALL_K3S_VERSION: '{{ k3s_version }}'
    INSTALL_K3S_EXEC: 'agent'

- name: Setup optional config file
  when: agent_config_yaml is defined
  block:
    - name: Make config directory
      ansible.builtin.file:
        path: '/etc/rancher/k3s'
        mode: '0755'
        state: directory
    - name: Copy config values
      ansible.builtin.copy:
        content: '{{ agent_config_yaml }}'
        dest: '/etc/rancher/k3s/config.yaml'
        mode: '0644'
      register: _agent_config_result

- name: Get the token from the first server
  ansible.builtin.set_fact:
    token: "{{ hostvars['k8s-0'].token }}"

- name: Add the token for joining the cluster to the environment
  no_log: true # avoid logging the server token
  ansible.builtin.lineinfile:
    path: '/etc/systemd/system/k3s-agent.service.env'
    line: '{{ item }}'
  with_items:
    - 'K3S_TOKEN={{ token }}'
    - 'K3S_URL=https://{{ api_endpoint }}:{{ api_port }}'

- name: Enable and check K3s service
  ansible.builtin.systemd:
    name: k3s-agent
    daemon_reload: 'true'
    state: "{{ 'restarted' if _agent_config_result.changed else 'started' }}"
    enabled: true
