---
- name: Install and Configure KVM on Localhost
  hosts: localhost
  become: true
  vars:
    username: '{{ ansible_env.SUDO_USER | default(ansible_user_id) }}'
    userhome: "{{ '/root' if username == 'root' else '/home/' + username }}"
    ethernet_interface: "{{ bridge_interface | default('enp5s0') }}"
    bridge_name: br0
    bridge_connection_name: bridge-br0
    bridge_xml_file: /tmp/br0.xml
    iso_storage_path: '/var/lib/libvirt/images'
    ubuntu_iso_url: 'https://releases.ubuntu.com/24.04.2/ubuntu-24.04.2-live-server-amd64.iso'
    ubuntu_iso_filename: 'ubuntu-24.04.2-live-server-amd64.iso'

  handlers:
    - name: Display Cockpit access info
      debug:
        msg: |
          KVM setup complete!
          Cockpit: http://localhost:9090
          Login: {{ username }}
          ISOs: {{ iso_storage_path }}/
    - name: Display Ubuntu download complete
      debug:
        msg: |-
          Ubuntu ISO downloaded!
          Location: {{ iso_storage_path }}/{{ ubuntu_iso_filename }}

  tasks:
    - name: Update APT cache and upgrade system packages
      apt:
        update_cache: true
        upgrade: dist
        cache_valid_time: 3600

    - name: Install KVM and virtualization dependencies
      apt:
        state: present
        name:
          - qemu-kvm
          - libvirt-daemon-system
          - libvirt-clients
          - bridge-utils
          - python3-pip
          - python3-libvirt
          - python3-lxml
          - cockpit
          - cockpit-machines

    - name: Add user to libvirt group for virtualization access
      user:
        name: '{{ username }}'
        groups: libvirt
        append: true

    - name: Create bridge connection
      nmcli:
        conn_name: '{{ bridge_connection_name }}'
        ifname: '{{ bridge_name }}'
        type: bridge
        method4: auto
        state: present

    - name: Add ethernet interface to bridge as slave
      nmcli:
        conn_name: 'bridge-slave-{{ ethernet_interface }}'
        ifname: '{{ ethernet_interface }}'
        type: ethernet
        slave_type: bridge
        master: '{{ bridge_name }}'
        state: present

    - name: Create libvirt definition for the bridge
      copy:
        dest: '{{bridge_xml_file}}'
        content: |
          <network>
            <name>{{bridge_name}}</name>
            <forward mode='bridge'/>
            <bridge name='{{bridge_name}}'/>
          </network>
        owner: '{{ username }}'
        group: '{{ username }}'
        mode: '0644'

    - name: Define libvirt bridge network
      community.libvirt.virt_net:
        name: '{{ bridge_name }}'
        command: define
        xml: "{{ lookup('file', '{{bridge_xml_file}}') }}"

    - name: Start libvirt bridge network
      community.libvirt.virt_net:
        name: '{{ bridge_name }}'
        command: start

    - name: Set libvirt bridge network to autostart
      community.libvirt.virt_net:
        name: '{{ bridge_name }}'
        autostart: true

    - name: Enable and start Cockpit web console
      systemd:
        name: cockpit.socket
        enabled: true
        state: started
      notify: Display Cockpit access info

    - name: Create ISO storage directory
      file:
        path: '{{ iso_storage_path }}'
        state: directory
        owner: root
        group: root
        mode: '0755'

    - name: Download Ubuntu 24.04.2 server ISO
      get_url:
        url: '{{ ubuntu_iso_url }}'
        dest: '{{ iso_storage_path }}/{{ ubuntu_iso_filename }}'
        owner: root
        group: root
        mode: '0644'
        timeout: 1800
        force: false
      retries: 3
      delay: 10
      notify: Display Ubuntu download complete
